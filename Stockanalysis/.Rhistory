knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(tidyverse)
options("getSymbols.yahoo.warning"=FALSE)
tsla <- getSymbols("Tsla", auto.assign = F)
head(tsla)
tsla_close <- tsla$TSLA.Close
head(tsla_close)
tsla_close2 <- Ad(tsla)
head(tsla_close2)
?lag
head(lag(tsla_close, 2))
?lag
head(lag(tsla_close, 2))
options(scipen = 9999)
daily_change <- tsla_close/lag(tsla_close,1) -1
head(daily_change)
hist((daily_change), 40, col = "green")
buy_signal <- .04
signal <- c(NULL)
for (i in 2:length(tsla_close)){
if(daily_change[i] > buy_signal){
signal[i] <- 1
} else
signal[i] <- 0
}
head(signal, 40)
signal <- reclass(signal, tsla_close)
head(signal,20)
chartSeries(tsla_close,
type = "l",
subset = "2011-01::2012-01",
theme = chartTheme("white"))
addTA(signal, type="S", col = "red")
knitr::opts_chunk$set(echo = TRUE)
library(PerformanceAnalytics)
library(quantmod)
library(tidyverse)
options("getSymbols.yahoo.warning"=FALSE)
options("getSymbols.warning4.0"=FALSE)
getSymbols("MSFT")
price <- Cl(MSFT) # close price
r <- price/Lag(price) - 1 # % price change
delta <-0.005 #threshold
signal <-c(0) # first date has no signal
#Loop over all trading days (except the first)
for (i in 2: length(price)){
if (r[i] > delta){
signal[i]<- 1
} else
signal[i]<- 0
}
signal<-reclass(signal,price)
tail(signal, n=20)
trade <- Lag(signal, 1)
ret <- dailyReturn(MSFT)*trade
names(ret) <- "filter"
charts.PerformanceSummary(ret, main = "Simple Filter")
day <- 14
price <- Cl(MSFT)
signal <- c(0)
rsi <- RSI(price, day)
signal [1:day +1] <- 0
for(i in (day + 1):length(price)){
if(rsi[i]<50){
signal[i] <- 1
}else{
signal[i] <- 0
}
}
signal <- reclass(signal, Cl(MSFT))
trade2 <- Lag(signal)
ret2 <- dailyReturn(MSFT)*trade2
names(ret) <- "Simple"
names(ret2) <- "RSI"
retcomb <- cbind(ret, ret2)
charts.PerformanceSummary(retcomb, main = "Simple Filter vs RSI")
knitr::opts_chunk$set(echo = TRUE)
library(PerformanceAnalytics)
library(quantmod)
library(tidyverse)
options("getSymbols.yahoo.warning"=FALSE)
options("getSymbols.warning4.0"=FALSE)
getSymbols("MSFT")
price <- Cl(MSFT) # close price
r <- price/Lag(price) - 1 # % price change
delta <-0.005 #threshold
signal <-c(0) # first date has no signal
#Loop over all trading days (except the first)
for (i in 2: length(price)){
if (r[i] > delta){
signal[i]<- 1
} else
signal[i]<- 0
}
signal<-reclass(signal,price)
tail(signal, n=20)
trade <- Lag(signal, 1)
ret <- dailyReturn(MSFT)*trade
names(ret) <- "filter"
charts.PerformanceSummary(ret, main = "Simple Filter")
day <- 14
price <- Cl(MSFT)
signal <- c(0)
rsi <- RSI(price, day)
day <- 14
price <- Cl(MSFT)
signal <- c(0)
rsi <- RSI(price, day)
signal [1:day +1] <- 0
for(i in (day + 1):length(price)){
if(rsi[i]<50){
signal[i] <- 1
}else{
signal[i] <- 0
}
}
signal <- reclass(signal, Cl(MSFT))
trade2 <- Lag(signal)
ret2 <- dailyReturn(MSFT)*trade2
names(ret) <- "Simple"
names(ret2) <- "RSI"
retcomb <- cbind(ret, ret2)
charts.PerformanceSummary(retcomb, main = "Simple Filter vs RSI")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(RColorBrewer)
library(tseries)
library(lubridate)
library(Quandl)
Quandl.api_key("zrcB2Ejv9UmvhPCUsy2_")
options("getSymbols.yahoo.warning"=FALSE)
#way1
msft <- getSymbols("MSFT", auto.assign = FALSE)
msft_Ad <- Ad(msft)
head(msft_Ad)
msft_daily <- dailyReturn(msft_Ad)
head(msft_daily)
#way2
new_msft <- dailyReturn(Ad(getSymbols("MSFT", auto.assign = F)))
head(new_msft)
new <- MSFT[1:30, 1:3]
new <- MSFT[1:30, 1:3]
new <- MSFT [1:30, 1:3]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(RColorBrewer)
library(tseries)
library(lubridate)
library(Quandl)
Quandl.api_key("zrcB2Ejv9UmvhPCUsy2_")
options("getSymbols.yahoo.warning"=FALSE)
#way1
msft <- getSymbols("MSFT", auto.assign = FALSE)
msft_Ad <- Ad(msft)
head(msft_Ad)
msft_daily <- dailyReturn(msft_Ad)
head(msft_daily)
#way2
new_msft <- dailyReturn(Ad(getSymbols("MSFT", auto.assign = F)))
head(new_msft)
new <- MSFT [1:30, 1:3]
#way1
msft <- getSymbols("MSFT", auto.assign = FALSE)
msft_Ad <- Ad(msft)
head(msft_Ad)
msft_daily <- dailyReturn(msft_Ad)
head(msft_daily)
#way2
new_msft <- dailyReturn(Ad(getSymbols("MSFT", auto.assign = F)))
head(new_msft)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(RColorBrewer)
library(tseries)
library(lubridate)
library(Quandl)
Quandl.api_key("zrcB2Ejv9UmvhPCUsy2_")
options("getSymbols.yahoo.warning"=FALSE)
new <- MSFT [1:30, 1:3]
new <- msft[1:30, 1:3]
MSFT["2007-01-03", "MSFT.Open"]
new <- msft[1:30, 1:3]
msft ["2007-01-03", "MSFT.Open"]
head(MSFT)
head(msft)
tail(msft)
dim(msft)
str(msft)
df <- as.data.frame(MSFT)
df <- as.data.frame(msft)
class(df)
head(df)
df<- as.xts(df)
class(df)
write.csv(df,"newdatamsft.csv")
fb <- getSymbols("FB", auto.assign = F)
fb_ad <- Ad(fb)
fb_daily <- dailyReturn(fb_ad)
dim(fb_daily)
new_fb <- dailyReturn(Ad(getSymbols("FB", auto.assign = F)))
df <- as.data.frame(msft)
class(df)
head(df)
df<- as.xts(df)
class(df)
write.csv(df,"newdatamsft.csv")
View(msft)
fb <- getSymbols("FB", auto.assign = F)
fb_ad <- Ad(fb)
fb_daily <- dailyReturn(fb_ad)
dim(fb_daily)
new_fb <- dailyReturn(Ad(getSymbols("FB", auto.assign = F)))
comb <- merge(new_msft, new_fb)
head(comb)
comb_traded <- merge(new_msft, new_fb, all = F)
head(comb_traded)
charts.PerformanceSummary(comb_traded, main = "FB vs MSFT")
table.AnnualizedReturns(comb_traded, scale = 252, Rf = .004/252)
options(scipen = 9999)
tsla <- getSymbols("TSLA", auto.assign = F)
head(tsla, 20)
head(dailyReturn(tsla$TSLA.Adjusted))
plot(dailyReturn(tsla$TSLA.Adjusted), type = "p")
table.AnnualizedReturns(comb_traded, scale = 252, Rf = .004/252)
knitr::opts_chunk$set(echo = TRUE)
setwd("\Users\Administrator\Desktop\Quantmod II")
setwd("\Users\Administrator\Desktop\Quantmod II")
setwd("\\Users\Administrator\Desktop\Quantmod II")
setwd("\\Users\\Administrator\\Desktop\\Quantmod II")
setwd("\\Users\User\Administrator\Desktop\Quantmod II")
setwd("\\Users\\User\Administrator\Desktop\Quantmod II")
setwd("\\Users\\User\\Administrator\Desktop\Quantmod II")
setwd("\\Users\\User\\Administrator\\Desktop\Quantmod II")
setwd("\\Users\\User\\Administrator\\Desktop\\Quantmod II")
setwd("/Users\Administrator\Desktop\Quantmod II")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(RColorBrewer)
library(tseries)
library(lubridate)
library(Quandl)
Quandl.api_key("zrcB2Ejv9UmvhPCUsy2_")
options("getSymbols.yahoo.warning"=FALSE)
#way1
msft <- getSymbols("MSFT", auto.assign = FALSE)
msft_Ad <- Ad(msft)
head(msft_Ad)
msft_daily <- dailyReturn(msft_Ad)
head(msft_daily)
#way2
new_msft <- dailyReturn(Ad(getSymbols("MSFT", auto.assign = F)))
head(new_msft)
new <- MSFT[1:30, 1:3]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(TTR)
library(quantmod)
library(PerformanceAnalytics)
library(RColorBrewer)
library(tseries)
library(lubridate)
library(Quandl)
Quandl.api_key("zrcB2Ejv9UmvhPCUsy2_")
options("getSymbols.yahoo.warning"=FALSE)
#way1
msft <- getSymbols("MSFT", auto.assign = FALSE)
msft_Ad <- Ad(msft)
head(msft_Ad)
msft_daily <- dailyReturn(msft_Ad)
head(msft_daily)
#way2
new_msft <- dailyReturn(Ad(getSymbols("MSFT", auto.assign = F)))
head(new_msft)
new <- msft[1:30, 1:3]
msft["2007-01-03", "MSFT.Open"]
head(msft)
tail(msft)
dim(msft)
str(msft)
df <- as.data.frame(MSFT)
df <- as.data.frame(msft)
class(df)
head(df)
df<- as.xts(df)
class(df)
write.csv(df,"newdatamsft.csv")
fb <- getSymbols("FB", auto.assign = F)
fb_ad <- Ad(fb)
fb_daily <- dailyReturn(fb_ad)
dim(fb_daily)
new_fb <- dailyReturn(Ad(getSymbols("FB", auto.assign = F)))
comb <- merge(new_msft, new_fb)
head(comb)
comb_traded <- merge(new_msft, new_fb, all = F)
head(comb_traded)
charts.PerformanceSummary(comb_traded, main = "FB vs MSFT")
table.AnnualizedReturns(comb_traded, scale = 252, Rf = .004/252)
options(scipen = 9999)
tsla <- getSymbols("TSLA", auto.assign = F)
head(tsla, 20)
head(dailyReturn(tsla$TSLA.Adjusted))
plot(dailyReturn(tsla$TSLA.Adjusted), type = "p")
knitr::opts_chunk$set(echo = TRUE)
setwd("\Users\Administrator\Desktop\Quantmod II")
setwd("/Users/Administrator/Desktop/Quantmod II")
setwd("/Users/User/Administrator/Desktop/Quantmod II")
setwd("C:/Users/User/Desktop/quantmod_stockanalysis/Stockanalysis")
knitr::opts_chunk$set(echo = TRUE)
setwd("\Users\Administrator\Desktop\Quantmod II")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(quantmod)
library(PerformanceAnalytics)
library(RColorBrewer)
library(tseries)
library(lubridate)
library(Quandl)
Quandl.api_key("zrcB2Ejv9UmvhPCUsy2_")
msft <- getSymbols("MSFT", auto.assign = F)
tsla <- getSymbols("Tsla", auto.assign = F)
tsla_daily_return <- dailyReturn(tsla$TSLA.Adjusted)
head(tsla_daily_return)
chartSeries(msft,
type = "line",
subset = "2007",
TA = "addBBands(n = 20, sd = 2)",
theme = chartTheme("white"))
knitr::include_graphics("rsi.png")
knitr::include_graphics("rsi.png")
chartSeries(msft  ,
type = "line",
TA = c(addBBands(n=20, sd = 2), addRSI(), addEMA(n = 30), addMACD()),
subset = "2007",
theme = chartTheme("white"))
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(tidyverse)
options("getSymbols.yahoo.warning"=FALSE)
tsla <- getSymbols("Tsla", auto.assign = F)
head(tsla)
tsla_close <- tsla$TSLA.Close
head(tsla_close)
tsla_close2 <- Ad(tsla)
head(tsla_close2)
?lag
head(lag(tsla_close, 2))
options(scipen = 9999)
daily_change <- tsla_close/lag(tsla_close,1) -1
head(daily_change)
hist((daily_change), 40, col = "green")
buy_signal <- .04
signal <- c(NULL)
for (i in 2:length(tsla_close)){
if(daily_change[i] > buy_signal){
signal[i] <- 1
} else
signal[i] <- 0
}
head(signal, 40)
signal <- reclass(signal, tsla_close)
head(signal,20)
chartSeries(tsla_close,
type = "l",
subset = "2011-01::2012-01",
theme = chartTheme("white"))
addTA(signal, type="S", col = "red")
## Task 1: Project Overview & Import Libraries ##
library(keras)
## Task 1: Project Overview & Import Libraries ##
library(keras)
install_keras(
method = c("auto", "virtualenv", "conda"),
conda = "auto",
version = "default",
tensorflow = "default",
extra_packages = c("tensorflow-hub"),
...
)
## Task 1: Project Overview & Import Libraries ##
library(keras)
## Task 1: Project Overview & Import Libraries ##
library(keras)
## Task 1: Project Overview & Import Libraries ##
install.packages("keras")
library(keras)
## Task 2: Import the Fashion MNIST Dataset ##
fashion_mnist <- dataset_fashion_mnist()
## Task 1: Project Overview & Import Libraries ##
install.packages("keras")
library(keras)
## Task 2: Import the Fashion MNIST Dataset ##
fashion_mnist <- dataset_fashion_mnist()
